@model Exigent_ViewModels.Admin.ChangePasswordViewModel

@{
    string styleDisplayValue = "none";
    string MessageType = "success";
    if (ViewBag.MessageType != null)
    {
        MessageType = ViewBag.MessageType.ToString();

        if (ViewBag.MessageType.ToString() == "" || ViewBag.MessageType.ToString() == null)
        {
            styleDisplayValue = "none";
        }
        else
        {
            styleDisplayValue = "block";
        }
    }

}



<div class="Grid">
    <div class="row noMargin">
        <div class="input-field col s12 m8 offset-m2 l6 offset-l3 left">
            @Html.HiddenFor(model => model.UserId)
            <div id="divAlert" class="alert-dismissable alert-@MessageType msgFormatting" style="display:@styleDisplayValue">
                <div class="closeBtn"><button type="button" class="closeAlert waves-effect waves-light btn btnSmallCustom-1" data-dismiss="alert">×</button></div>
                @Html.ValidationSummary(true)
            </div>
        </div>
    </div>
    @if (string.IsNullOrEmpty(Model.OTP))
    {
        <div class="row noMargin">
            <div class="input-field col s12 m8 offset-m2 l6 offset-l3 left">
                <div class="labelTxt">Old Password<span class="required">*</span></div>
                @Html.PasswordFor(model => model.OldPassword, new { id = "OldPassword", @class = "validate left", tabindex = "1", placeholder = "Please type here" })
                <p class="required">@Html.ValidationMessageFor(model => model.OldPassword, null)</p>
            </div>
        </div>
    }
    <div class="row noMargin">
        <div class="input-field col s12 m8 offset-m2 l6 offset-l3 left">
            <div class="labelTxt">New Password<span class="required">*</span></div>
            @Html.PasswordFor(model => model.NewPassword, new { @class = "validate left", tabindex = "2", maxlength = "14", placeholder = "Please type here" })
            <p class="required">@Html.ValidationMessageFor(model => model.NewPassword, null)</p>
        </div>
    </div>
    <div class="row noMargin">
        <div class="input-field col s12 m8 offset-m2 l6 offset-l3 left">
            <div class="labelTxt">Confirm Password<span class="required">*</span></div>
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "validate left", tabindex = "3", maxlength = "14", placeholder = "Please type here" })
            <p class="required">@Html.ValidationMessageFor(model => model.ConfirmPassword, null)</p>
        </div>
    </div>
    <div class="row">
        <div class="input-field col s12 m8 offset-m2 l6 offset-l3 left BtnsAlign">
            <input id="btnSubmit" type="submit" name="button" class="waves-effect waves-light btn btn" value="@Resources.UserResource.Save" tabindex="4">
            @if (string.IsNullOrEmpty(Model.OTP))
            {
                <a class="waves-effect waves-light btn btn marginLeftBtn cancelBtn" href="@Url.Action("MyProfile", new {controller="Home", area = "Home" })" tabindex="5">@Resources.UserResource.Cancel</a>
            }
            else
            {
                <a class="waves-effect waves-light btn btn marginLeftBtn cancelBtn" href="@Url.Action("Index", "Login")" tabindex="5">@Resources.UserResource.Cancel</a>
            }
        </div>
    </div>
</div>


